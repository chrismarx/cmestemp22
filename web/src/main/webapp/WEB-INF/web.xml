<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="EurekaStreams" version="2.5">
	<display-name>GWT-Maven-Archetype</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/conf/applicationContext.xml</param-value>
	</context-param>

	<!-- Begin Shindig Configuration -->

	<!-- configuration -->
	<!-- If you have your own Guice module(s), put them here as a colon-separated 
		list. org.apache.shindig.social.sample.SampleModule: -->
	<context-param>
		<param-name>guice-modules</param-name>
		<param-value>
			org.eurekastreams.server.service.opensocial.config.ContainerPropertiesModule:
			org.apache.shindig.gadgets.DefaultGuiceModule:
            org.eurekastreams.server.service.opensocial.core.config.SpringContextGuiceModule:
            org.eurekastreams.server.service.opensocial.config.OAuthModule:
			org.apache.shindig.common.cache.ehcache.EhCacheModule 
    </param-value>
	</context-param>
	<!-- The log4j.xml configuration file location -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/conf/log4j.xml</param-value>
	</context-param>
	<!-- log4j.xml configuration file refresh interval in milliseconds -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<context-param>
		<param-name>system.properties</param-name>
		<param-value>
        shindig.host=localhost
        
        aKey=/shindig/gadgets/proxy?container=default&amp;url=
        shindig.port=
        
     </param-value>
	</context-param>

	<!-- =============== FILTERS =============== -->

	<!-- Invoke setup app if not yet done -->
	<filter>
		<filter-name>rootOrgCheckFilter</filter-name>
		<filter-class>org.eurekastreams.server.service.filters.RootOrgCheckFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>rootOrgCheckFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>

	<!-- Shindig authentication -->
	<filter>
		<filter-name>authFilter</filter-name>
		<filter-class>org.apache.shindig.auth.AuthenticationServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>authFilter</filter-name>
		<url-pattern>/social/*</url-pattern>
		<url-pattern>/gadgets/ifr</url-pattern>
		<url-pattern>/gadgets/makeRequest</url-pattern>
		<url-pattern>/gadgets/api/rpc/*</url-pattern>
		<url-pattern>/gadgets/api/rest/*</url-pattern>
		<url-pattern>/rpc/*</url-pattern>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>

	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- URL rewriting -->
	<!-- Note:  This is after Spring Security because rewriting an OAuth-protected URL will make it fail signature verification. -->
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>confReloadCheckInterval</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>DEBUG</param-value>
		</init-param>
		<init-param>
			<param-name>statusEnabled</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/api/*</url-pattern>
	</filter-mapping>


	<!-- =============== LISTENERS =============== -->

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.apache.shindig.common.servlet.GuiceServletContextListener</listener-class>
	</listener>

	<!-- start spring security listeners -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- - Publishes events for session creation and destruction through the 
		application - context. Optional unless concurrent session control is being 
		used. <listener> <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class> 
		</listener> -->
	<!-- end spring security listeners -->


	<!-- =============== SERVLETS =============== -->

	<servlet>
		<servlet-name>org.eurekastreams.commons.server.ActionRPCServiceImpl/gwt_rpc</servlet-name>
		<servlet-class>org.eurekastreams.commons.server.ActionRPCServiceImpl</servlet-class>
	</servlet>

	<!-- Render a Gadget -->
	<servlet>
		<servlet-name>xml-to-html</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.GadgetRenderingServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>accel</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.HtmlAccelServlet</servlet-class>
	</servlet>

	<!-- Proxy -->
	<servlet>
		<servlet-name>proxy</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.ProxyServlet</servlet-class>
	</servlet>

	<!-- makeRequest -->
	<servlet>
		<servlet-name>makeRequest</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.MakeRequestServlet</servlet-class>
	</servlet>

	<!-- Concat -->
	<servlet>
		<servlet-name>concat</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.ConcatProxyServlet</servlet-class>
	</servlet>

	<!-- OAuth callback -->
	<servlet>
		<servlet-name>oauthCallback</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.OAuthCallbackServlet</servlet-class>
	</servlet>

	<!-- Metadata RPC -->
	<servlet>
		<servlet-name>metadata</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.RpcServlet</servlet-class>
	</servlet>

	<!-- javascript serving -->
	<servlet>
		<servlet-name>js</servlet-name>
		<servlet-class>org.apache.shindig.gadgets.servlet.JsServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>restapiServlet</servlet-name>
		<servlet-class>org.apache.shindig.protocol.DataServiceServlet</servlet-class>
		<init-param>
			<param-name>handlers</param-name>
			<param-value>org.apache.shindig.handlers</param-value>
		</init-param>
	</servlet>

	<!-- Serve social RPC api -->
	<servlet>
		<servlet-name>jsonRpcServlet</servlet-name>
		<servlet-class>org.apache.shindig.protocol.JsonRpcServlet</servlet-class>
		<init-param>
			<param-name>handlers</param-name>
			<param-value>org.apache.shindig.handlers</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>getImageServlet</servlet-name>
		<servlet-class>org.eurekastreams.server.service.servlets.GetImageServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>personAvatarUploadServlet</servlet-name>
		<servlet-class>org.eurekastreams.server.service.servlets.UploadPersonAvatarServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>groupAvatarUploadServlet</servlet-name>
		<servlet-class>org.eurekastreams.server.service.servlets.UploadGroupAvatarServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>orgAvatarUploadServlet</servlet-name>
		<servlet-class>org.eurekastreams.server.service.servlets.UploadOrgAvatarServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>bannerUploadServlet</servlet-name>
		<servlet-class>org.eurekastreams.server.service.servlets.UploadBannerServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>themeCssServlet</servlet-name>
		<servlet-class>org.eurekastreams.server.service.servlets.GetThemeCssServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>getImageServlet</servlet-name>
		<url-pattern>/eurekastreams/photos</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>personAvatarUploadServlet</servlet-name>
		<url-pattern>/eurekastreams/personavatarupload/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>groupAvatarUploadServlet</servlet-name>
		<url-pattern>/eurekastreams/groupavatarupload/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>orgAvatarUploadServlet</servlet-name>
		<url-pattern>/eurekastreams/orgavatarupload/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>bannerUploadServlet</servlet-name>
		<url-pattern>/eurekastreams/bannerupload/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>themeCssServlet</servlet-name>
		<url-pattern>/eurekastreams/themes/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>js</servlet-name>
		<url-pattern>/gadgets/js/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>proxy</servlet-name>
		<url-pattern>/gadgets/proxy/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>makeRequest</servlet-name>
		<url-pattern>/gadgets/makeRequest</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>org.eurekastreams.commons.server.ActionRPCServiceImpl/gwt_rpc</servlet-name>
		<url-pattern>/gwt_rpc</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>jsonRpcServlet</servlet-name>
		<url-pattern>/rpc/*</url-pattern>
		<url-pattern>/gadgets/api/rpc/*</url-pattern>
		<url-pattern>/social/rpc/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>restapiServlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
		<url-pattern>/gadgets/api/rest/*</url-pattern>
		<url-pattern>/social/rest/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>concat</servlet-name>
		<url-pattern>/gadgets/concat</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>oauthCallback</servlet-name>
		<url-pattern>/gadgets/oauthcallback</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>xml-to-html</servlet-name>
		<url-pattern>/gadgets/ifr</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>accel</servlet-name>
		<url-pattern>/gadgets/accel</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>metadata</servlet-name>
		<url-pattern>/gadgets/metadata</url-pattern>
	</servlet-mapping>

	<!-- End of Shindig Configuration -->

	<!-- Restlet adapter -->
	<servlet>
		<servlet-name>RestletServlet</servlet-name>
		<servlet-class>com.noelios.restlet.ext.spring.SpringServerServlet</servlet-class>
		<init-param>
			<param-name>org.restlet.application</param-name>
			<param-value>resourceApplication</param-value>
		</init-param>
		<init-param>
			<param-name>org.restlet.component</param-name>
			<param-value>resourceComponent</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>RestletServlet</servlet-name>
		<url-pattern>/resources/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<resource-ref>
	    <res-ref-name>jdbc/myDataSource</res-ref-name>
	    <res-type>javax.sql.DataSource</res-type>
	    <res-auth>Container</res-auth>
	    <res-sharing-scope>Shareable</res-sharing-scope>
  	</resource-ref>

</web-app>
