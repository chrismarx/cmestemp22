<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>eurekastreams-parent</artifactId>
        <groupId>org.eurekastreams</groupId>
        <version>1.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eurekastreams</groupId>
    <artifactId>eurekastreams-web</artifactId>
    <packaging>war</packaging>
    <version>1.1-SNAPSHOT</version>
    <name>Eureka Streams Web</name>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>1.5.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.restlet</groupId>
            <artifactId>org.restlet</artifactId>
            <version>1.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.restlet</groupId>
            <artifactId>org.restlet.ext.spring</artifactId>
            <version>1.1.10</version>
        </dependency>
		<dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-ajp</artifactId>
            <version>6.1.0</version>
        </dependency>
		<dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-sslengine</artifactId>
            <version>6.1.11</version>
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewrite</artifactId>
            <version>3.2.0-beta</version>
        </dependency>
        <!--
            commons-lang is specified here because gilead and
            spring-ldap-core both use versions that are too old to be
            compatible with shindig. By placing it here we can override
            requests for older versions.
        -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <!-- Used for security servlet filter -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>
        <!--  GWT deps (from central repo) -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
            <scope>provided</scope>
        </dependency>
       <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwtVersion}</version>
            <scope>test</scope>
       </dependency>
       <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.12</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.ldap</groupId>
            <artifactId>spring-ldap-core</artifactId>
            <version>1.3.1.RELEASE</version>
        </dependency>
        <dependency>
        	<groupId>org.springframework</groupId>
        	<artifactId>spring-tx</artifactId>
        	<version>2.5.6.SEC02</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>2.0.4</version>
			<!-- Using 2.0.4 because 2.0.6 has a bug that results in locked users not getting the access denied page.  See JIRA https://jira.springsource.org/browse/SEC-1606.  Waiting for 2.0.7 to be released. -->
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
                <exclusion>
                	<artifactId>spring-aop</artifactId>
                	<groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--  test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>2.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.eurekastreams</groupId>
            <artifactId>eurekastreams-server</artifactId>
            <version>${project.version}</version> 
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-legacy</artifactId>
            <version>2.5.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>6.1.14</version>
        </dependency>
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.2</version>
            <classifier>jdk15</classifier>
            <type>jar</type>
        </dependency>
       <dependency>
            <groupId>net.sf.gilead</groupId>
            <artifactId>gilead4gwt</artifactId>
            <version>1.3.2</version>
     		<exclusions>
			    <exclusion>
                    <groupId>com.google.gwt</groupId>
                    <artifactId>gwt-user</artifactId>
				</exclusion>
			</exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.shindig</groupId>
            <artifactId>shindig-server</artifactId>
            <version>${build.gadget.shindig.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.apache.shindig</groupId>
            <artifactId>shindig-social-api</artifactId>
            <version>${build.gadget.shindig.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shindig</groupId>
            <artifactId>shindig-common</artifactId>
            <version>${build.gadget.shindig.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.shindig</groupId>
            <artifactId>shindig-gadgets</artifactId>
            <version>${build.gadget.shindig.version}</version>
        </dependency>
        <dependency>
            <groupId>caja</groupId>
            <artifactId>json_simple</artifactId>
            <version>r1</version>
            <scope>compile</scope>
        </dependency>
        <!-- 
        <dependency>
            <groupId>it.cnr.isti.domoware</groupId>
            <artifactId>org.postgresql.jdbc4</artifactId>
            <version>8.3-603</version>
        </dependency>
         -->
        <dependency>
            <groupId>com.gwtyuicarousel</groupId>
            <artifactId>carousel</artifactId>
            <version>0.6.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gwt-dnd</groupId>
            <artifactId>gwt-dnd</artifactId>
            <version>3.0.1</version>
        </dependency>
        <!-- Uncomment to enable GWT logging -->
		<dependency>
		    <groupId>com.google.code.gwt-log</groupId>
		    <artifactId>gwt-log</artifactId>
		    <version>2.6.2</version>
		</dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- Quartz -->
        <dependency>
            <groupId>quartz</groupId>
            <artifactId>quartz</artifactId>
            <version>1.5.2</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.2</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>spy</groupId>
            <artifactId>memcached</artifactId>
            <version>2.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-core</artifactId>
            <version>5.2.0</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${build.maven.sharedresources.artifactid}</artifactId>
            <version>${build.maven.sharedresources.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>eurekastreams-database</artifactId>
            <version>${project.version}</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>ROOT</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.0-beta-3</version>
				<executions>
					  <execution>
						    <phase>validate</phase>
						    <goals>
						      <goal>create</goal>
						    </goals>
					  </execution>
				</executions>
				<configuration>
				    <format>{0,date,yyyyMMddHHmmss}</format>
				    <items>
				        <item>timestamp</item>
				    </items>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <configuration>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>${env.WEBPORT}</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>${env.GRWEBPORT}</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <webAppConfig>
                        <contextPath>/</contextPath>
                    </webAppConfig>
                    <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}/eureka</webAppSourceDirectory>
                    <contextPath>/</contextPath>
                    <webXml>${project.build.directory}/${project.build.finalName}/eureka/WEB-INF/web.xml</webXml>
                    <requestLog  implementation="org.mortbay.jetty.NCSARequestLog">
			            <filename>${project.build.directory}/jetty-access.log</filename>
			            <retainDays>1</retainDays>
			            <append>true</append>
			            <extended>false</extended>
			            <logTimeZone>GMT</logTimeZone>
			        </requestLog> 
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                       <delimiter>${*}</delimiter>
                    </delimiters>
                    <nonFilteredFileExtensions>
                       <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                       <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                       <nonFilteredFileExtension>so</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
             <!-- 
            <plugin> 
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <id>chmodder</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>chmod</executable>
                            <arguments>
                                <argument>-R</argument>
                                <argument>755</argument>
                                <argument>${project.build.directory}/classes/db/scripts</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>create lib folder</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                        	<target>
                        		<mkdir dir="${project.build.directory}/unpack/lib-bin" />
                        		<mkdir dir="${project.build.directory}/unpack/lib-java" />
                        	</target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                  <execution>
                    <id>unpack-dependency-resources</id>
                    <goals>
                      <goal>unpack-dependencies</goal>
                    </goals>
                    <phase>generate-resources</phase>
                    <configuration>
						 <outputDirectory>${project.build.directory}/unpack</outputDirectory>
						 <includeGroupIds>${project.groupId}</includeGroupIds>
						 <includeTypes>zip</includeTypes>
						 <includeScopes>provided</includeScopes>
						 <excludeTransitive>true</excludeTransitive>
                    </configuration>
                  </execution>
                </executions>
              </plugin>
              <plugin>
                   <artifactId>maven-deploy-plugin</artifactId>
                   <configuration>
                    <skip>true</skip>
                   </configuration>
               </plugin>
        </plugins>
        <resources>
            <resource>
                <targetPath>features</targetPath>
                <directory>${basedir}/src/main/resources/features</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>conf</targetPath>
                <directory>${basedir}/src/main/resources/conf</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>public</targetPath>
                <directory>${basedir}/src/main/resources/public</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>db/schema</targetPath>
                <directory>${project.build.directory}/unpack/resources/schema</directory>
                <excludes>
                    <exclude>*/*.*</exclude>
                </excludes>
            </resource>
            <resource>
                <targetPath>db/migration</targetPath>
                <directory>${project.build.directory}/unpack/resources/migration</directory>
            </resource>
                        <resource>
                <targetPath>db/scripts</targetPath>
                <directory>${project.build.directory}/unpack/resources/scripts</directory>
            </resource>
            <resource>
                <directory>${project.build.directory}/unpack/resources</directory>
                <excludes>
                    <exclude>datapopulation/**</exclude>
                    <exclude>schema/**</exclude>
                    <exclude>scripts/**</exclude>
                    <exclude>migration/**</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <targetPath>scripts</targetPath>
                <directory>${basedir}/src/main/scripts</directory>
            </resource>
        </resources>
    </build>

<!--
    Profile Activation and Property Description:
        Maven Flag missing (-D):
            cobertura - if does not exist, perform operations a certain way

        Maven Flag (-D) with no value:
            ldap-security - if exists, moves the Spring file into place for LDAP security
            jaas-security - if exists, moves the Spring file into place for JAAS form based security 
            openaccess-security - if exists, moves the Spring file into place for open access form based security     
            preauth-security - if exists, moves the Spring file into place for pre-auth security
            kerb-security - if exists, moves the Spring file into place for JAAS security 
            EnableJMS - if exists, replace the realTimeExecuter to messageProducer enabling queuing of async
                     actions
            cobertura - if exists, enable the generation of Clover code coverage reports
            rpm.build - if exists, perform the steps to create an RPM out of the build

        Maven Flag (-D) with value:
            deployto-envname - if exists, the value is used to replace all URLs from the default of http://localhost:8080 to the
                    configured value.
                        Example... -Ddeplyto-envname=http://example.com

        System Environment variables missing:
            BUILDTYPE - if missing, perform build operations for the development environment

        System Environment variables - The following values can be configured on the command line when invoking maven with
            the -D prefix or by setting them in the user's environment:
            BUILDTYPE - this value will be examined to determine which profile to activate
                     or enable a particular profile upon absense of this environment variable
                     values can be: int, uat, perf, prod
-->
    <profiles>
        <profile>
            <id>LDAP Bind Spring Security</id>
            <activation>
                <property>
                    <name>ldap-security</name>
                </property>
            </activation>
            <properties>
            	<build.spring.security>ldap</build.spring.security>
            </properties>
        </profile>
        <profile>
            <id>Pre-auth Spring Security</id>
            <activation>
                <property>
                    <name>preauth-security</name>
                </property>
            </activation>
            <properties>
            	<build.spring.security>preauth</build.spring.security>
            </properties>
        </profile>
        <profile>
            <id>JAAS Spring Security</id>
            <activation>
                <property>
                    <name>jaas-security</name>
                </property>
            </activation>
			<properties>
            	<build.spring.security>jaas</build.spring.security>
            </properties>
        </profile>        
        <profile>
            <id>Open Access Spring Security</id>
            <activation>
                <property>
                    <name>openaccess-security</name>
                </property>
            </activation>
			<properties>
            	<build.spring.security>openaccess</build.spring.security>
            </properties>
        </profile>        
        <profile>
            <id>Kerberos JAAS Spring Security</id>
            <activation>
                <property>
                    <name>kerb-security</name>
                </property>
            </activation>
            <properties>
            	<build.spring.security>jaas</build.spring.security>
            </properties>
        </profile>
        <profile>
            <id>Enable the JMS queuing</id>
            <activation>
                <property>
                    <name>EnableJMS</name>
                </property>
            </activation>
            <properties>
                <build.jms.taskhandler>queueTaskHandler</build.jms.taskhandler>
            </properties>
        </profile>
        <profile>
            <id>connect-server-project</id>
            <activation>
                <property>
                    <name>split</name>
                    <value>connectserver</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
				<!-- lib-java allows extensions to be pulled in via shared resources and included in the WAR -->
                                <resource>
                                    <directory>${project.build.directory}/unpack/lib-java</directory>
                                    <targetPath>WEB-INF/lib</targetPath>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/classes/public/gadgets</directory>
                                    <targetPath>org/eurekastreams/gadgets</targetPath>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/classes/public</directory>
                                    <targetPath></targetPath>
                                    <includes>
                                        <include>*.*</include>
                                        <include>plugins/**</include>
                                        <include>scripts/**</include>
                                        <include>style/**</include>
                                    </includes>
                                    <excludes>
                                        <exclude>gadgets</exclude>
                                    </excludes>
                                </resource>
                            </webResources>
                            <warSourceExcludes>.gwt-tmp/**,WEB-INF/classes/javax/**</warSourceExcludes>
                            <packagingExcludes>WEB-INF/classes/public/**,WEB-INF/classes/database/**,WEB-INF/classes/db/**,WEB-INF/classes/scripts/**</packagingExcludes>
                            <warName>${project.build.finalName}</warName>
							<webappDirectory>${project.build.directory}/${project.build.finalName}/eureka</webappDirectory>
							<!-- Exclude the slf4j JDK 1.4 logging adapter to force slf4j logging to use log4j. -->
							<overlays>
                                <overlay>
                                    <groupId>org.apache.shindig</groupId>
                                    <artifactId>shindig-server</artifactId>
                                    <type>war</type>
                                    <excludes>
                                        <exclude>WEB-INF/lib/slf4j-jdk14-*.jar</exclude>
                                    </excludes>
                                </overlay>
                            </overlays>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>cdn-project</id>
            <activation>
                <property>
                    <name>split</name>
                    <value>cdn</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <version>2.1.0-1</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-user</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-dev</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                           <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-servlet</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <module>${build.gwt.modulename}</module>
                            <logLevel>INFO</logLevel>
                            <extraJvmArgs>-Xmx1024m</extraJvmArgs>
                            <gwtVersion>${gwtVersion}</gwtVersion>
                            <mergedWebXml>${project.build.directory}/web.xml</mergedWebXml>
                            <webXmlServletPathAsIs>true</webXmlServletPathAsIs>
                            <runTarget>Application.html</runTarget>
                            <noServer>true</noServer>
                            <compileReport>true</compileReport>
                            <port>8080</port>
                            <hostedWebapp>ROOT</hostedWebapp>
                            <style>${build.gwt.compile.style}</style>
                            <localWorkers>1</localWorkers>
                       </configuration>
                        <executions>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.2.1</version>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/client.xml</descriptor>
                                <descriptor>src/main/assembly/server.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>assembly</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>combined-project</id>
            <activation>
                <property>
                    <name>!split</name>
                </property>
            </activation>
            <properties>
            	<build.web.cdn>.</build.web.cdn>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>gwt-maven-plugin</artifactId>
                        <version>2.1.0-1</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-user</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-dev</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                           <dependency>
                                <groupId>com.google.gwt</groupId>
                                <artifactId>gwt-servlet</artifactId>
                                <version>${gwtVersion}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <module>${build.gwt.modulename}</module>
                            <logLevel>INFO</logLevel>
                            <extraJvmArgs>-Xms1124m -Xmx1124m -Xss24m</extraJvmArgs>
                            <gwtVersion>${gwtVersion}</gwtVersion>
                            <mergedWebXml>${project.build.directory}/web.xml</mergedWebXml>
                            <webXmlServletPathAsIs>true</webXmlServletPathAsIs>
                            <runTarget>Application.html</runTarget>
                            <noServer>true</noServer>
                            <compileReport>true</compileReport>
                            <port>8080</port>
                            <hostedWebapp>ROOT</hostedWebapp>
                            <style>${build.gwt.compile.style}</style>
                            <localWorkers>1</localWorkers>
                       </configuration>
                        <executions>
                            <execution>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!--
                        If you want to use the target/web.xml file
                        mergewebxml produces, tell the war plugin to use
                        it. Also, exclude what you want from the final
                        artifact here.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
				<!-- lib-java allows extensions to be pulled in via shared resources and included in the WAR -->
                                <resource>
                                    <directory>${project.build.directory}/unpack/lib-java</directory>
                                    <targetPath>WEB-INF/lib</targetPath>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/classes/public/gadgets</directory>
                                    <targetPath>org/eurekastreams/gadgets</targetPath>
                                </resource>
                                <resource>
                                    <directory>${project.build.directory}/classes/public</directory>
                                    <targetPath></targetPath>
                                    <includes>
                                        <include>*.*</include>
                                        <include>plugins/**</include>
                                        <include>scripts/**</include>
                                        <include>style/**</include>
                                    </includes>
                                    <excludes>
                                        <exclude>gadgets</exclude>
                                    </excludes>
                                </resource>
                            </webResources>
                            <warSourceExcludes>.gwt-tmp/**,WEB-INF/classes/javax/**</warSourceExcludes>
                            <packagingExcludes>WEB-INF/classes/public/**,WEB-INF/classes/database/**,WEB-INF/classes/db/**,WEB-INF/classes/scripts/**</packagingExcludes>
                            <warName>${project.build.finalName}</warName>
                            <webappDirectory>${project.build.directory}/${project.build.finalName}/eureka</webappDirectory>
							<!-- Exclude the slf4j JDK 1.4 logging adapter to force slf4j logging to use log4j. -->
							<overlays>
                                <overlay>
                                    <groupId>org.apache.shindig</groupId>
                                    <artifactId>shindig-server</artifactId>
                                    <type>war</type>
                                    <excludes>
                                        <exclude>WEB-INF/lib/slf4j-jdk14-*.jar</exclude>
                                    </excludes>
                                </overlay>
                            </overlays>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

       <!-- CDN build -->
       <profile>
            <id>CDN Server RPM Build</id>
            <activation>
                <property>
                    <name>rpm.servercdnbuild</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.0.1</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>eurekastreams-webcdn-server-${rpm.servercdnbuild}</name>
                            <copyright>2011, Lockheed Martin Corp.</copyright>
                            <distribution>Eureka Streams</distribution>
                            <group>Application/Social Media</group>
                            <icon></icon>
                            <packager>Social Media Program, Lockheed Martin Corp.</packager>
                            <prefix>/opt/tomcat6/current/eurekawebapps</prefix>
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                            </defineStatements>
                            <mappings>
                                <mapping>
                                    <directory>/opt/tomcat6/current/eurekawebapps</directory>
                                    <filemode>555</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/ROOT-server.war</location>
                                        </source>
                                    </sources>
                                </mapping>
                              </mappings>
                            <requires>
                            </requires>
			                    <preinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                     </preinstallScriptlet>
			                    <postinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                    </postinstallScriptlet>
			                    <preremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </preremoveScriptlet>
			                    <postremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </postremoveScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>CDN Client RPM Build</id>
            <activation>
                <property>
                    <name>rpm.clientcdnbuild</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.0.1</version>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>eurekastreams-webcdn-client-${rpm.clientcdnbuild}</name>
                            <copyright>2011, Lockheed Martin Corp.</copyright>
                            <distribution>Eureka Streams</distribution>
                            <group>Application/Social Media</group>
                            <icon></icon>
                            <packager>Social Media Program, Lockheed Martin Corp.</packager>
                            <prefix>/opt/tomcat6/current/eurekawebapps</prefix>
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                            </defineStatements>
                            <mappings>
                                <mapping>
                                    <directory>/opt/eurekastatic</directory>
                                    <filemode>555</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/ROOT-client</location>
                                        </source>
                                    </sources>
                                </mapping>
                              </mappings>
                            <requires>
                            </requires>
			                    <preinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                     </preinstallScriptlet>
			                    <postinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                    </postinstallScriptlet>
			                    <preremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </preremoveScriptlet>
			                    <postremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </postremoveScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
 
 
       <!-- Non CDN build -->
       <profile>
            <id>RPM Build</id>
            <activation>
                <property>
                    <name>rpm.build</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.0.1</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <name>eurekastreams-web-${rpm.build}</name>
                            <copyright>2009, Lockheed Martin Corp.</copyright>
                            <distribution>Eureka Streams</distribution>
                            <group>Application/Social Media</group>
                            <icon></icon>
                            <packager>Social Media Program, Lockheed Martin Corp.</packager>
                            <prefix>/opt/tomcat6/current/eurekawebapps</prefix>
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                            </defineStatements>
                            <mappings>
                                <mapping>
                                    <directory>/opt/tomcat6/current/eurekawebapps</directory>
                                    <filemode>555</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/ROOT.war</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>   
                                    <directory>/usr/lib</directory>
                                    <filemode>555</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>${project.build.directory}/unpack/lib-bin</location>
                                            <excludes>
                                                <exclude>README.txt</exclude>
                                            </excludes>
                                        </source>
                                    </sources>
                                </mapping>                                
                            </mappings>
                            <requires>
                            </requires>
			                    <preinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                     </preinstallScriptlet>
			                    <postinstallScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postinstall.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>
			                    </postinstallScriptlet>
			                    <preremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/preremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </preremoveScriptlet>
			                    <postremoveScriptlet>
			                        <scriptFile>${project.build.directory}/classes/scripts/postremove.sh</scriptFile>
			                        <fileEncoding>utf-8</fileEncoding>                    
			                    </postremoveScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Dev Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>dev</value>
                </property>
            </activation>
            <build>            
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/unpack/resources/database/schema/dev</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-WAR</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${env.HOME}/tomcat/webapps</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>ROOT.war</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Int Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>int</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/unpack/resources/database/schema/int</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Uat Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>uat</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/db/schema</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/unpack/resources/database/schema/uat</directory>
                                            <includes>
                                                <include>*.sql</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Perf Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>perf</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/conf</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/classes/conf/log4j-prod</directory>
                                            <includes>
                                                <include>log4j.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>false</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Prod Environment Web Build Config</id>
            <activation>
                <property>
                    <name>buildtype</name>
                    <value>prod</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/classes/conf</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/classes/conf/log4j-prod</directory>
                                            <includes>
                                                <include>log4j.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Update node type to Web node</id>
            <activation>
                <property>
                    <name>nodetype</name>
                    <value>webnode</value>
                </property>
            </activation>
            <properties>
                <build.system.nodetype>webNode</build.system.nodetype>
                <build.system.jobscheduler><![CDATA[<!-- No job scheduler -->]]></build.system.jobscheduler>
                <build.jms.taskhandler>queueTaskHandler</build.jms.taskhandler>
            </properties>
        </profile>
        <profile>
             <id>gwt-dev-windows</id>
            <properties>
                <platform>windows</platform>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>gwt-dev-mac</id>
            <properties>
                <platform>mac</platform>
            </properties>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>gwt-dev-linux</id>
            <properties>
                <platform>linux</platform>
            </properties>
            <activation>
                <os>
                    <name>Linux</name>
                </os>
            </activation>
        </profile>
    </profiles>
    <properties>
    <!--    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> -->
    </properties>

</project>
